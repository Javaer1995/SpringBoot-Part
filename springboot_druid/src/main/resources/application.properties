# 连接池类型（核心配置）
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动名称（核心配置）
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库url（核心配置）
spring.datasource.druid.url=jdbc:mysql://localhost:3306/ssm?characterEncoding=utf-8
# 数据库用户名（核心配置）
spring.datasource.druid.username=root
# 数据库密码（核心配置）
spring.datasource.druid.password=root
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 连接池的最小空闲数量
spring.datasource.druid.min-idle=5
# 连接池最大连接数量
spring.datasource.druid.max-active=20
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 申请连接的时候检测，如果等待时间大于time-between-eviction-runs-millis，执行validation-query检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 既作为检测的间隔时间，又作为test-while-idle执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 销毁线程时，检测当前连接的最后活动时间与当前时间的差值，差值大于该值时关闭当前连接
spring.datasource.druid.min-evictable-idle-time-millis=30000
# 用来检测数据库连接是否有效的sql，必须是一个查询语句（oracle中为 select 1 from dual）
spring.datasource.druid.validation-query=select 1
# 申请连接时会执行validation-query检测连接是否有效，开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
# 归还连接时会执行validation-query检测连接是否有效，开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache，
# PSCache对支持游标的数据库性能提升巨大，比如说oracle，但在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 要启用PSCache，必须配置大于0，当大于0时，pool-prepared-statements自动触发修改为true，
# 在Druid中，不会存在Oracle的PSCache占用内存过多的问题，所以要启用PSCache时可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
